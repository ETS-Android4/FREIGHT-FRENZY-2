Index: TeamCode/src/main/java/org/firstinspires/ftc/teamcode/teleop/outtake_test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* Copyright (c) 2017 FIRST. All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted (subject to the limitations in the disclaimer below) provided that\r\n * the following conditions are met:\r\n *\r\n * Redistributions of source code must retain the above copyright notice, this list\r\n * of conditions and the following disclaimer.\r\n *\r\n * Redistributions in binary form must reproduce the above copyright notice, this\r\n * list of conditions and the following disclaimer in the documentation and/or\r\n * other materials provided with the distribution.\r\n *\r\n * Neither the name of FIRST nor the names of its contributors may be used to endorse or\r\n * promote products derived from this software without specific prior written permission.\r\n *\r\n * NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS\r\n * LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\r\n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\r\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\r\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\r\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\r\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\npackage org.firstinspires.ftc.teamcode.teleop;\r\n\r\nimport com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;\r\nimport com.qualcomm.robotcore.eventloop.opmode.TeleOp;\r\nimport com.qualcomm.robotcore.hardware.DcMotor;\r\nimport com.qualcomm.robotcore.hardware.DcMotorEx;\r\nimport com.qualcomm.robotcore.hardware.Gamepad;\r\n\r\n\r\n@TeleOp\r\n//@Disabled\r\npublic class outtake_test extends LinearOpMode {\r\n\r\n    public double intake_speed = 0.8;\r\n    public int outtake_velo = 50;\r\n    public int outtake_dist = 50;\r\n    public DcMotorEx intake1 = null;\r\n    public int a = 0;\r\n\r\n    @Override\r\n    public void runOpMode() {\r\n\r\n        /* Carousel PID */\r\n\r\n\r\n        intake1 = hardwareMap.get(DcMotorEx.class, \"intake\");\r\n        intake1.setMode(DcMotor.RunMode.STOP_AND_RESET_ENCODER);\r\n        intake1.setMode(DcMotor.RunMode.RUN_USING_ENCODER);\r\n        intake1.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);\r\n        intake1.setDirection(DcMotor.Direction.FORWARD);\r\n        intake1.setPower(0.0);\r\n\r\n\r\n        /* Gamepads */\r\n\r\n        Gamepad gp1 = gamepad1;\r\n        Gamepad gp2 = gamepad2;\r\n\r\n\r\n        // Wait for the game to start (driver presses PLAY)\r\n        waitForStart();\r\n\r\n\r\n        // run until the end of the match (driver presses STOP)\r\n        while(opModeIsActive()) {\r\n            /* gamepad 2 */\r\n\r\n            /* Intake */\r\n\r\n            if(gp2.right_bumper){\r\n                intake1.setTargetPosition(outtake_dist);\r\n                intake1.setVelocity(outtake_velo);\r\n                while(intake1.isBusy()){\r\n                    a += 1;\r\n                }\r\n                intake1.setVelocity(0);\r\n            }\r\n            else if(gp2.left_bumper){\r\n                intake1.setTargetPosition(0);\r\n                intake1.setVelocity(outtake_velo);\r\n                while(intake1.isBusy()){\r\n                    a += 1;\r\n                }\r\n                intake1.setVelocity(0);\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/teleop/outtake_test.java b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/teleop/outtake_test.java
--- a/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/teleop/outtake_test.java	(revision 05403f93ffdb9c42c7c5c2fbf1e9da049f25b6d6)
+++ b/TeamCode/src/main/java/org/firstinspires/ftc/teamcode/teleop/outtake_test.java	(date 1639141322733)
@@ -40,7 +40,6 @@
 //@Disabled
 public class outtake_test extends LinearOpMode {
 
-    public double intake_speed = 0.8;
     public int outtake_velo = 50;
     public int outtake_dist = 50;
     public DcMotorEx intake1 = null;
